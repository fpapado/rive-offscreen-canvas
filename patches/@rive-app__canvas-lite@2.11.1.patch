diff --git a/rive.js b/rive.js
index 457bbced886ea2f1d43b5d875a73a8136fdc87f9..0b2440a94c7eed7dc020ac26f58bb47d0e1388a4 100644
--- a/rive.js
+++ b/rive.js
@@ -150,7 +150,7 @@ h.onRuntimeInitialized = function() {
 const fa = "createConicGradient createImageData createLinearGradient createPattern createRadialGradient getContextAttributes getImageData getLineDash getTransform isContextLost isPointInPath isPointInStroke measureText".split(" "), ha = new function() {
   function b() {
     if (!a) {
-      var f = document.createElement("canvas"), r = {alpha:1, depth:0, stencil:0, antialias:0, premultipliedAlpha:1, preserveDrawingBuffer:0, preferLowPowerToHighPerformance:0, failIfMajorPerformanceCaveat:0, enableExtensionsByDefault:1, explicitSwapControl:1, renderViaOffscreenBackBuffer:1,};
+      var f = globalThis?.document?.createElement("canvas") ?? new OffscreenCanvas(1, 1), r = {alpha:1, depth:0, stencil:0, antialias:0, premultipliedAlpha:1, preserveDrawingBuffer:0, preferLowPowerToHighPerformance:0, failIfMajorPerformanceCaveat:0, enableExtensionsByDefault:1, explicitSwapControl:1, renderViaOffscreenBackBuffer:1,};
       let q;
       if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {
         if (q = f.getContext("webgl", r), c = 1, !q) {
@@ -4117,7 +4117,16 @@ var Rive = /** @class */ (function () {
      * and resize the layout to match the new drawing surface afterwards.
      * Useful function for consumers to include in a window resize listener
      */
-    Rive.prototype.resizeDrawingSurfaceToCanvas = function (customDevicePixelRatio) {
+    Rive.prototype.resizeDrawingSurfaceToCanvas = function (customDevicePixelRatio, width, height) {
+        // Manual version, useful for environments without DOM and window access
+        // (e.g. workers). This could be its own separate method tbh.
+        if (!!customDevicePixelRatio && !!width && !!height) {
+            this.canvas.width = customDevicePixelRatio * width;
+            this.canvas.height = customDevicePixelRatio * height;
+            this.startRendering();
+            this.resizeToCanvas();
+        }
+
         if (this.canvas instanceof HTMLCanvasElement && !!window) {
             var _a = this.canvas.getBoundingClientRect(), width = _a.width, height = _a.height;
             var dpr = customDevicePixelRatio || window.devicePixelRatio || 1;
